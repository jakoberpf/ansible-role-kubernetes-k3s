---

- name: Prepare
  hosts: all
  gather_facts: false
  vars: # https://www.toptechskills.com/ansible-tutorials-courses/how-to-fix-usr-bin-python-not-found-error-tutorial/
    baseline_command: |
      if [ $(command -v apt-get) ]; then apt-get update && apt-get upgrade -y && apt-get install -y python3 sudo bash ca-certificates && apt-get clean; \
      elif [ $(command -v apk) ]; then apk update && apk add --no-cache python3 sudo bash ca-certificates; fi
    #  elif [ $(command -v zypper) ]; then zypper refresh && zypper update -y && zypper install -y python sudo bash python-xml && zypper clean -a; \
    #  elif [ $(command -v dnf) ]; then dnf makecache && dnf --assumeyes install python sudo python-devel python2-dnf bash && dnf clean all; \
    #  elif [ $(command -v yum) ]; then yum makecache fast && yum update -y && yum install -y python sudo yum-plugin-ovl bash || true && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && yum clean all; \
 
  tasks:
    - name: "Prep hosts for ansible"
      ansible.builtin.raw: "{{ baseline_command }}"
 
    - name: "Gather facts"
      ansible.builtin.gather_facts:

    # - name: "[ubuntu] Prepare for ansible"
    #   block:
    #   - name: "[ubuntu] gpg"
    #     command: "which gpg"
    #     changed_when: no
    #     failed_when: no
    #     register: "ubuntu_gpg"
 
    #   - name: "[ubuntu] Ensure packages are present"
    #     ansible.builtin.apt:
    #       name: "{{ item }}"
    #       state: present
    #       force_apt_get: yes
    #       update_cache: yes
    #     loop:
    #       - gpg
    #     when: 
    #       - item not in ubuntu_gpg.stdout
 
    #   when:
    #     - ansible_distribution == "Ubuntu"
